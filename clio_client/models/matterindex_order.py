from typing import Literal, cast

MatterindexOrder = Literal[
    "client.name(asc)",
    "client.name(desc)",
    "close_date(asc)",
    "close_date(desc)",
    "created_at(asc)",
    "created_at(desc)",
    "custom_number(asc)",
    "custom_number(desc)",
    "display_number(asc)",
    "display_number(desc)",
    "grants(asc)",
    "grants(desc)",
    "id(asc)",
    "id(desc)",
    "matter_stage.name(asc)",
    "matter_stage.name(desc)",
    "matter_stage_updated_at(asc)",
    "matter_stage_updated_at(desc)",
    "open_date(asc)",
    "open_date(desc)",
    "originating_attorney.name(asc)",
    "originating_attorney.name(desc)",
    "pending_date(asc)",
    "pending_date(desc)",
    "practice_area.name(asc)",
    "practice_area.name(desc)",
    "responsible_attorney.name(asc)",
    "responsible_attorney.name(desc)",
    "statute_of_limitations.due_at(asc)",
    "statute_of_limitations.due_at(desc)",
    "updated_at(asc)",
    "updated_at(desc)",
]

MATTERINDEX_ORDER_VALUES: set[MatterindexOrder] = {
    "client.name(asc)",
    "client.name(desc)",
    "close_date(asc)",
    "close_date(desc)",
    "created_at(asc)",
    "created_at(desc)",
    "custom_number(asc)",
    "custom_number(desc)",
    "display_number(asc)",
    "display_number(desc)",
    "grants(asc)",
    "grants(desc)",
    "id(asc)",
    "id(desc)",
    "matter_stage.name(asc)",
    "matter_stage.name(desc)",
    "matter_stage_updated_at(asc)",
    "matter_stage_updated_at(desc)",
    "open_date(asc)",
    "open_date(desc)",
    "originating_attorney.name(asc)",
    "originating_attorney.name(desc)",
    "pending_date(asc)",
    "pending_date(desc)",
    "practice_area.name(asc)",
    "practice_area.name(desc)",
    "responsible_attorney.name(asc)",
    "responsible_attorney.name(desc)",
    "statute_of_limitations.due_at(asc)",
    "statute_of_limitations.due_at(desc)",
    "updated_at(asc)",
    "updated_at(desc)",
}


def check_matterindex_order(value: str) -> MatterindexOrder:
    if value in MATTERINDEX_ORDER_VALUES:
        return cast(MatterindexOrder, value)
    raise TypeError(f"Unexpected value {value!r}. Expected one of {MATTERINDEX_ORDER_VALUES!r}")

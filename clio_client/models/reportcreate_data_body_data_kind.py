from typing import Literal, cast

ReportcreateDataBodyDataKind = Literal[
    "accounts_receivable",
    "accounts_receivable_aging",
    "bank_account_activity",
    "billing_history",
    "billing_rate",
    "client_activity",
    "client_ledger",
    "clio_payments_deposit",
    "clio_payments_ledger",
    "clio_payments_monthly_statement",
    "clio_payments_sales_tax",
    "clio_payments_transaction",
    "contact_information",
    "disbursement_payment",
    "fee_allocation",
    "general_ledger",
    "grant_matters",
    "invoice_payments_v2",
    "law_society_of_alberta",
    "law_society_of_alberta_al",
    "law_society_of_alberta_bar",
    "law_society_of_alberta_tl",
    "law_society_of_alberta_tt",
    "matter",
    "matter_balance_summary",
    "matter_productivity_by_user",
    "matters_by_responsible_attorney",
    "originating_attorney_revenue",
    "other_revenue",
    "productivity_by_client",
    "productivity_by_user",
    "revenue",
    "task_productivity_by_user",
    "task_progress_by_user",
    "trust_ledger",
    "trust_ledger_nsw",
    "trust_listing",
    "trust_management",
    "work_in_progress",
]

REPORTCREATE_DATA_BODY_DATA_KIND_VALUES: set[ReportcreateDataBodyDataKind] = {
    "accounts_receivable",
    "accounts_receivable_aging",
    "bank_account_activity",
    "billing_history",
    "billing_rate",
    "client_activity",
    "client_ledger",
    "clio_payments_deposit",
    "clio_payments_ledger",
    "clio_payments_monthly_statement",
    "clio_payments_sales_tax",
    "clio_payments_transaction",
    "contact_information",
    "disbursement_payment",
    "fee_allocation",
    "general_ledger",
    "grant_matters",
    "invoice_payments_v2",
    "law_society_of_alberta",
    "law_society_of_alberta_al",
    "law_society_of_alberta_bar",
    "law_society_of_alberta_tl",
    "law_society_of_alberta_tt",
    "matter",
    "matter_balance_summary",
    "matter_productivity_by_user",
    "matters_by_responsible_attorney",
    "originating_attorney_revenue",
    "other_revenue",
    "productivity_by_client",
    "productivity_by_user",
    "revenue",
    "task_productivity_by_user",
    "task_progress_by_user",
    "trust_ledger",
    "trust_ledger_nsw",
    "trust_listing",
    "trust_management",
    "work_in_progress",
}


def check_reportcreate_data_body_data_kind(value: str) -> ReportcreateDataBodyDataKind:
    if value in REPORTCREATE_DATA_BODY_DATA_KIND_VALUES:
        return cast(ReportcreateDataBodyDataKind, value)
    raise TypeError(f"Unexpected value {value!r}. Expected one of {REPORTCREATE_DATA_BODY_DATA_KIND_VALUES!r}")

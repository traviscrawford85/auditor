# copilot-audit: true
# Description: This file is a modular part of a larger OpenAPI specification for a Clio API integration.
# Objective: Audit this spec segment for completeness, correctness, and consistency with OpenAPI 3.1 standards.
# Tasks:
# 1. Verify valid OpenAPI syntax (YAML structure, keys).
# 2. Confirm all `$ref` targets exist and are reachable (local or shared component references).
# 3. Ensure operationId values are unique, descriptive, and follow the {method}_{resource} pattern.
# 4. Check that requestBody and response schemas use proper `$ref`s and avoid inline duplication.
# 5. Validate that all schemas and components are named clearly and represent their intent.
# 6. Detect and flag unused components under `components.schemas`, `components.responses`, etc.
# 7. Review tag usage for clarity, grouping, and alignment with x-tagGroups (if used).
# 8. Enforce use of standard HTTP methods and response codes (e.g., 200, 201, 400, 404, 422, 500).
# 9. Validate pagination, filtering, and sorting patterns for list endpoints.
# 10. Check that the top-level spec (if root) defines: openapi version, info, servers, paths, components, and tags.
# 11. Ensure every schema property has a `type` and if applicable a `format`; infer missing types where possible.
# 12. Recommend stronger type hints (e.g., `integer` vs `string`, `date-time` vs `string`) where obvious.
# Output:
# - A checklist of errors or improvements, preferably with line references.
# - Suggestions for how to fix or improve structure, naming, reuse, and typing.
#
# NOTE: This file is part of a spec intended to generate a custom Python client using `openapi-python-client`,
# which expects well-formed operationIds and `$ref`s to derive method names and models.

$defs:
  AvatarBase:
    description: AvatarBase
    properties:
      id:
        anyOf:
        - type: integer
        - type: 'null'
        default: null
        description: Unique identifier for the *Avatar*
        title: Id
      etag:
        anyOf:
        - type: string
        - type: 'null'
        default: null
        description: ETag for the *Avatar*
        title: Etag
      created_at:
        anyOf:
        - format: date-time
          type: string
        - type: 'null'
        default: null
        description: The time the *Avatar* was created (as a ISO-8601 timestamp)
        title: Created At
      updated_at:
        anyOf:
        - format: date-time
          type: string
        - type: 'null'
        default: null
        description: The time the *Avatar* was last updated (as a ISO-8601 timestamp)
        title: Updated At
      url:
        anyOf:
        - type: string
        - type: 'null'
        default: null
        description: The URL for the *Avatar*
        title: Url
      _destroy:
        anyOf:
        - type: boolean
        - type: 'null'
        default: null
        description: Whether to destroy the *Avatar*
        title: Destroy
    title: AvatarBase
    type: object
description: Participant
properties:
  id:
    anyOf:
    - type: integer
    - type: 'null'
    default: null
    description: Unique identifier for the *Participant*
    title: Id
  etag:
    anyOf:
    - type: string
    - type: 'null'
    default: null
    description: ETag for the *Participant*
    title: Etag
  created_at:
    anyOf:
    - format: date-time
      type: string
    - type: 'null'
    default: null
    description: The time the *Participant* was created (as a ISO-8601 timestamp)
    title: Created At
  updated_at:
    anyOf:
    - format: date-time
      type: string
    - type: 'null'
    default: null
    description: The time the *Participant* was last updated (as a ISO-8601 timestamp)
    title: Updated At
  type:
    anyOf:
    - type: string
    - type: 'null'
    default: null
    description: The type of the Participant. Person and Company are subtypes of Contact
    title: Type
  identifier:
    anyOf:
    - type: string
    - type: 'null'
    default: null
    description: A string to identify the *Participant*
    title: Identifier
  secondary_identifier:
    anyOf:
    - type: string
    - type: 'null'
    default: null
    description: A secondary string to identify the *Participant*
    title: Secondary Identifier
  enabled:
    anyOf:
    - type: boolean
    - type: 'null'
    default: null
    description: The enabled state of the *Participant* record. Always 'null' if *Participant*
      type is Contact
    title: Enabled
  name:
    anyOf:
    - type: string
    - type: 'null'
    default: null
    description: The name of the *Participant* record
    title: Name
  initials:
    anyOf:
    - type: string
    - type: 'null'
    default: null
    description: A  string with the participant initials
    title: Initials
  job_title_name:
    anyOf:
    - type: string
    - type: 'null'
    default: null
    description: the job title name of the participant if they are a firm user and
      have one
    title: Job Title Name
  avatar:
    anyOf:
    - $ref: '#/$defs/AvatarBase'
    - type: 'null'
    default: null
title: Participant
type: object

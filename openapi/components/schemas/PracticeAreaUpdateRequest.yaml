# copilot-audit: true
# Description: This file is a modular part of a larger OpenAPI specification for a Clio API integration.
# Objective: Audit this spec segment for completeness, correctness, and consistency with OpenAPI 3.1 standards.
# Tasks:
# 1. Verify valid OpenAPI syntax (YAML structure, keys).
# 2. Confirm all `$ref` targets exist and are reachable (local or shared component references).
# 3. Ensure operationId values are unique, descriptive, and follow the {method}_{resource} pattern.
# 4. Check that requestBody and response schemas use proper `$ref`s and avoid inline duplication.
# 5. Validate that all schemas and components are named clearly and represent their intent.
# 6. Detect and flag unused components under `components.schemas`, `components.responses`, etc.
# 7. Review tag usage for clarity, grouping, and alignment with x-tagGroups (if used).
# 8. Enforce use of standard HTTP methods and response codes (e.g., 200, 201, 400, 404, 422, 500).
# 9. Validate pagination, filtering, and sorting patterns for list endpoints.
# 10. Check that the top-level spec (if root) defines: openapi version, info, servers, paths, components, and tags.
# 11. Ensure every schema property has a `type` and if applicable a `format`; infer missing types where possible.
# 12. Recommend stronger type hints (e.g., `integer` vs `string`, `date-time` vs `string`) where obvious.
# Output:
# - A checklist of errors or improvements, preferably with line references.
# - Suggestions for how to fix or improve structure, naming, reuse, and typing.
#
# NOTE: This file is part of a spec intended to generate a custom Python client using `openapi-python-client`,
# which expects well-formed operationIds and `$ref`s to derive method names and models.

$defs:
  PracticeAreaUpdateRequestData:
    description: PracticeAreaUpdateRequestData
    properties:
      category:
        anyOf:
        - type: string
        - type: 'null'
        default: null
        description: 'The practice area category associated with the *PracticeArea*.
          The friendly display values corresponding to the enum strings: * Administrative
          * Admiralty / Maritime * Anti-Trust / Competition * Appellate * Banking
          / Finance * Bankruptcy * Business Formation / Compliance * Civil Litigation
          * Civil Rights / Constitutional * Collections & Debt * Commercial / Sale
          of Goods * Commercial Litigation * Construction * Consumer Protection *
          Contracts * Corporate Litigation * Criminal * Disability / Social Security
          * Education * Elder * Employment / Labor * Energy / Environmental * Ethics
          * Family * Food / Drug * General Practice * Government * Healthcare * Immigration
          * In-House Counsel * Insurance * Intellectual Property * International *
          Juvenile * Legal Aid * Mediation / Arbitration * Medical Malpractice * Military
          * Multi-Practice * Non-Profit / Pro Bono * Other * Personal Injury * Privacy
          / Information Security * Private Client * Product Liability * Real Estate
          * Science / Technology * Securities / Mergers & Acquisitions * Small Claims
          * Sports / Entertainment / Gaming * Tax * Telecommunications * Traffic Offenses
          * Transportation * Tribal * Trusts * Wills & Estates * Worker''s Compensation '
        title: Category
      code:
        anyOf:
        - type: string
        - type: 'null'
        default: null
        description: The code attached to the PracticeArea.
        title: Code
      name:
        anyOf:
        - type: string
        - type: 'null'
        default: null
        description: Name of the PracticeArea.
        title: Name
    title: PracticeAreaUpdateRequestData
    type: object
description: PracticeAreaUpdateRequest
properties:
  data:
    $ref: '#/$defs/PracticeAreaUpdateRequestData'
required:
- data
title: PracticeAreaUpdateRequest
type: object

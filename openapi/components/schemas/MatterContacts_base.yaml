# copilot-audit: true
# Description: This file is a modular part of a larger OpenAPI specification for a Clio API integration.
# Objective: Audit this spec segment for completeness, correctness, and consistency with OpenAPI 3.1 standards.
# Tasks:
# 1. Verify valid OpenAPI syntax (YAML structure, keys).
# 2. Confirm all `$ref` targets exist and are reachable (local or shared component references).
# 3. Ensure operationId values are unique, descriptive, and follow the {method}_{resource} pattern.
# 4. Check that requestBody and response schemas use proper `$ref`s and avoid inline duplication.
# 5. Validate that all schemas and components are named clearly and represent their intent.
# 6. Detect and flag unused components under `components.schemas`, `components.responses`, etc.
# 7. Review tag usage for clarity, grouping, and alignment with x-tagGroups (if used).
# 8. Enforce use of standard HTTP methods and response codes (e.g., 200, 201, 400, 404, 422, 500).
# 9. Validate pagination, filtering, and sorting patterns for list endpoints.
# 10. Check that the top-level spec (if root) defines: openapi version, info, servers, paths, components, and tags.
# Output:
# - A checklist of errors or improvements, preferably with line references.
# - Suggestions for how to fix or improve structure, naming, and reuse.
#
# NOTE: This file is part of a spec intended to generate a custom Python client using `openapi-python-client`,
# which expects well-formed operationIds and `$ref`s to derive method names and models.

type: object
properties:
  contact_created_at:
    type: string
    format: date-time
    description: Timestamp of the time the contact was created
  contact_updated_at:
    type: string
    format: date-time
    description: Timestamp of the time the contact was created
  created_at:
    type: string
    format: date-time
    description: The time the *MatterContacts* was created (as a ISO-8601 timestamp)
  description:
    type: string
    description: Description of the matter
  etag:
    type: string
    description: ETag for the *MatterContacts*
  first_name:
    type: string
    description: First name of the Person
  id:
    type: integer
    format: int64
    description: Unique identifier for the *MatterContacts*
  initials:
    type: string
    description: The initials of the *MatterContacts*
  is_client:
    type: boolean
    description: Whether or not the MatterContacts is a client
  last_name:
    type: string
    description: Last name of the Person
  matter_id:
    type: integer
    format: int64
    description: ID of the matter
  matter_number:
    type: string
    description: Number of the matter
  middle_name:
    type: string
    description: Middle name of the Person
  name:
    type: string
    description: The full name of the *MatterContacts*
  prefix:
    type: string
    description: The prefix of the *MatterContacts* (Mr, Mrs, etc)
  primary_email_address:
    type: string
    description: The primary email address associated with this *MatterContacts*.
  primary_phone_number:
    type: string
    description: The primary phone number associated with this *MatterContacts*.
  relationship_name:
    type: string
    description: >-
      The description of the relation between the contact and the matter, or
      "Client" if the user is the client.
  secondary_email_address:
    type: string
    description: The secondary email address of the contact
  secondary_phone_number:
    type: string
    description: The secondary phone number of the contact
  title:
    type: string
    description: The designated title of the *MatterContacts*
  type:
    type: string
    enum:
      - Company
      - Person
    description: The type of the *MatterContacts*
  updated_at:
    type: string
    format: date-time
    description: The time the *MatterContacts* was last updated (as a ISO-8601 timestamp)
  client_connect_user_id:
    type: integer
    format: int64
    description: The client connect ID of the contacts associated user
